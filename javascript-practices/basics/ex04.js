/*
변수의 스코프(Scope)

1. 자바 스크립트는 코드에서 변수의 범위를 알 수 있다.(정적 스코프)
2. 자바스크립트엔 전역 범위가 존재
3. ES6 이전(<=ES5) 
    3-1. 자바와 같은 블록 범위를 지원x
    3-2. 함수 범위만 지원 
    3-3. var 키워드를 사용해야 함수 범위를 가진다. 
4. ES6 이후(ES2015 ~ ES2024)
    4-1. 자바와 같은 블록 범위 지원
    4-2. let 키워드를 사용해 블록 범위의 변수를 만든다.
    4-3. const 키워드를 사용해 블록 범위의 상수를 만든다.
5. 결론
    const/let 둘 중 하나를 반드시 사용하자(안 붙히면 전역 범위가 되버리는 hoisting 발생 가능) 
*/

var i = 20; // 전역 범위 
var f = function() {
    var i = 10; //지역 범위(function호출 시 사라지는 변수 범위)
    j = 100; //전역 범위(지역 변수 테이블이 아닌 전역 범위에 생성 - function 호출 후에도 사라지지 않는 변수 범위)

    console.log(i);
    j = j = i;
}

f();
console.log(i);  //지역 범위 내 i가 아닌 전역 범위내 i값 출력
console.log(j); 

//var 키워드는 함수 블록에서만 범위를 만든다. 다른 블록에서는 전역 범위 
if(90 + 10 === 100) {
    var k = 10; //전역 범위(if 구문안에서는 지역 범위로 적용x)
}
console.log(k); 

//없는 변수 참조 시 not defined  error 
console.log(x);
